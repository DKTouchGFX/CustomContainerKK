/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/home_screen/HomeViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

HomeViewBase::HomeViewBase() :
    buttonCallback(this, &HomeViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    background.setXY(0, 0);
    add(background);

    PressMeButton.setXY(280, 215);
    PressMeButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
    PressMeButton.setLabelText(touchgfx::TypedText(T___SINGLEUSE_3682));
    PressMeButton.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    PressMeButton.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    PressMeButton.setAction(buttonCallback);
    add(PressMeButton);

    DummyButton.setXY(40, 100);
    DummyButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
    DummyButton.setLabelText(touchgfx::TypedText(T___SINGLEUSE_GASO));
    DummyButton.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    DummyButton.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    DummyButton.setVisible(false);
    DummyButton.setAction(buttonCallback);
    add(DummyButton);
}

HomeViewBase::~HomeViewBase()
{

}

void HomeViewBase::setupScreen()
{
    background.initialize();
}

void HomeViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &PressMeButton)
    {
        //ButtonPressed
        //When PressMeButton clicked change screen to Screen1
        //Go to Screen1 with no screen transition
        application().gotoScreen1ScreenNoTransition();
    }
    if (&src == &DummyButton)
    {
        //DummyButtonPressed
        //When DummyButton clicked change screen to Screen2
        //Go to Screen2 with no screen transition
        application().gotoScreen2ScreenNoTransition();
    }
}
